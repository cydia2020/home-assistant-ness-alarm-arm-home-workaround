esphome:
  name: alarm-bridge
  friendly_name: alarm-bridge

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret encryption_key

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Alarm-Bridge"
    password: !secret default_ap_password

captive_portal:

web_server:
  port: 80
  include_internal: True
  auth:
    username: admin
    password: admin
  ota: False
  local: True

binary_sensor:
  # Aux 1, unused for now
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    id: aux1
    name: "Aux 1"

  # Aux 2, Armed Away
  - platform: gpio
    pin:
      number: GPIO9
      mode: INPUT_PULLUP
      inverted: True
    id: aux2
    name: "Aux 2"

  # Aux 3, Armed Home
  - platform: gpio
    pin:
      number: GPIO10
      mode: INPUT_PULLUP
      inverted: True
    id: aux3
    name: "Aux 3"

  # Aux 4, unused for now
  - platform: gpio
    pin:
      number: GPIO14
      mode: INPUT_PULLUP
      inverted: True
    id: aux4
    name: "Aux 4"

# you don't have to include these, I have these in order for it to communicate with my BI server
switch: 
- platform: gpio
  pin: 12
  id: relay_1
  name: "Front"
  internal: True
  on_turn_on:
    then:
    - delay: 5s
    - switch.turn_off: relay_1
- platform: gpio
  pin: 5
  id: relay_2
  name: "Side"
  internal: True
  on_turn_on:
    then:
    - delay: 5s
    - switch.turn_off: relay_2
- platform: gpio
  pin: 4
  id: relay_3
  name: "Back"
  internal: True
  on_turn_on:
    then:
    - delay: 5s
    - switch.turn_off: relay_3
- platform: gpio
  pin: 15
  id: relay_4
  name: "Backyard"
  internal: True
  on_turn_on:
    then:
    - delay: 5s
    - switch.turn_off: relay_4

status_led:
  pin: 13
